{"version":3,"sources":["components/TaskItem.js","components/TaskList.js","components/AddTask.js","components/App.js","index.js"],"names":["TaskItem","props","react_default","a","createElement","className","htmlFor","task","name","style","done","textDecoration","type","id","checked","onChange","onChecked","aria-label","onClick","onRemoveItem","TaskList","tasks","map","AddTask","TextField_default","label","margin","placeholder","fullWidth","variant","InputLabelProps","shrink","value","input","onAddChange","onKeyPress","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","handleAdd","handleCheckbox","handleRemoveItem","handleKeyPress","e","setState","target","newTask","length","toConsumableArray","concat","key","item","find","newTasks","filter","moment","format","onAddTask","React","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.15a26396.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function TaskItem(props) {\n  return (\n    <div className=\"card mb-4\">\n      <li className=\"card-body todo-item\">\n        <label className=\"custom-control material-checkbox\"\n          htmlFor={props.task.name}\n          style={props.task.done ? {textDecoration: 'line-through'} : {textDecoration: 'initial'}}\n        >\n          <input \n            type=\"checkbox\" \n            className=\"material-control-input\"\n            name={props.task.name} \n            id={props.task.name}\n            checked={props.task.done}\n            onChange={() => props.onChecked(props.task.name)}\n            />\n            <span className=\"material-control-indicator\"></span>\n            <span className=\"material-control-description\">\n              {props.task.name}\n            </span>\n          <button \n            type=\"button\" className=\"close\" aria-label=\"Close\"\n            onClick={() => props.onRemoveItem(props.task)} >\n              &times;\n          </button>\n        </label>\n      </li>\n    </div>\n  )\n}\n","import React from 'react';\nimport TaskItem from './TaskItem';\n\nexport default function TaskList(props) {\n  return (\n    <ul id=\"todo-list\">\n      {props.tasks.map((task) => (\n        <TaskItem \n          task={task}\n          onChecked={props.onChecked}\n          onRemoveItem={props.onRemoveItem}\n          />\n      ))}\n    </ul>\n  )\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function AddTask(props) {\n  return (\n    <div className=\"input-group mt-5 mb-3\">\n      <TextField\n        id=\"outlined-full-width\"\n        label=\"Add a task\"\n        style={{ margin: 8 }}\n        placeholder=\"Press enter after typing in the task\"\n        fullWidth\n        margin=\"normal\"\n        variant=\"outlined\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        value={props.input} \n        onChange={props.onAddChange}\n        onKeyPress={props.onKeyPress}\n    />\n    </div>\n  )\n}\n","\nimport React from 'react';\nimport moment from 'moment';\nimport TaskList from './TaskList'\nimport AddTask from './AddTask'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      tasks: [\n        {\n          name: 'Buy Groceries',\n          done: false\n        },\n        {\n          name: 'Take the dog out',\n          done: false\n        },\n        {\n          name: 'Code a todo list',\n          done: false\n        },\n        {\n          name: 'Learn to fly',\n          done: false\n        },\n      ],\n      input: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleCheckbox = this.handleCheckbox.bind(this);\n    this.handleRemoveItem = this.handleRemoveItem.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      input: e.target.value\n    })\n  }\n\n  handleAdd(input) {\n    const newTask = {\n      name: input,\n      done: false\n    }\n    if (this.state.input.length > 0) {\n      this.setState({\n        tasks: [ \n          ...this.state.tasks,\n          newTask\n        ],\n        input: ''\n      })\n    }\n  }\n\n  handleKeyPress(e) {\n    if(e.key === 'Enter' && this.state.input.length > 0) {\n      const newTask = {\n        name: this.state.input,\n        done: false\n      }\n      this.setState({\n        tasks: [ \n          ...this.state.tasks,\n          newTask\n        ],\n        input: ''\n      })\n    }\n  }\n\n  handleCheckbox(name) {\n    const { tasks } = this.state;\n    const item = tasks.find(task => task.name === name);\n    item.done = !item.done;\n    this.setState({\n      tasks\n    })\n  }\n  \n  handleRemoveItem(task) {\n    const { tasks } = this.state;\n    const newTasks = tasks.filter(item => item.name !== task.name);\n    this.setState({\n      tasks: newTasks\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\" id=\"todo\">\n        <h1>{moment().format('dddd, MMM Do YYYY')}</h1>\n        <TaskList \n          tasks={this.state.tasks}\n          onChecked={this.handleCheckbox}\n          onRemoveItem={this.handleRemoveItem}\n          />\n        <AddTask \n          onAddChange={this.handleChange}\n          onAddTask={this.handleAdd}\n          onKeyPress={this.handleKeyPress}\n          input={this.state.input}\n          />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './app.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}